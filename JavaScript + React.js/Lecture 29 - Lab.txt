MOUSE TRACKER
-------------
// MouseTracker.js
import React from 'react';

function MouseTracker({ render }) {
    const [position, setPosition] = React.useState({ x: 0, y: 0 });

    const handleMouseMove = (event) => {
        setPosition({ x: event.clientX, y: event.clientY });
    };

    return (
        <div style={{ height: '100vh' }} onMouseMove={handleMouseMove}>
            {render(position)}
        </div>
    );
}

export default MouseTracker;

// App.js
import React from 'react';
import MouseTracker from './MouseTracker';

function App() {
    return (
        <div className="App">
            <MouseTracker render={({ x, y }) => (
                <h1>The mouse position is ({x}, {y})</h1>
            )} />
        </div>
    );
}

export default App;

==================================================================
CONDITIONAL RENDERING MOUSE TRACKER
------------------------------------

// MouseTracker.js
import React from 'react';

function MouseTracker({ render }) {
    const [position, setPosition] = React.useState({ x: 0, y: 0 });

    const handleMouseMove = (event) => {
        setPosition({ x: event.clientX, y: event.clientY });
    };

    return (
        <div style={{ height: '100vh' }} onMouseMove={handleMouseMove}>
            {render(position)}
        </div>
    );
}

export default MouseTracker;

// App.js
import React from 'react';
import MouseTracker from './MouseTracker';

function App() {
    return (
        <div className="App">
            <MouseTracker render={({ x, y }) => (
                <div>
                    {y < window.innerHeight / 2 ? (
                        <h1>The mouse is in the top half ({x}, {y})</h1>
                    ) : (
                        <h1>The mouse is in the bottom half ({x}, {y})</h1>
                    )}
                </div>
            )} />
        </div>
    );
}

export default App;